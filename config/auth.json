{
  "providers": {
    "email": {
      "enabled": true,
      "maxAge": 86400,
      "rateLimit": {
        "requests": 5,
        "window": 900
      }
    },
    "nostr": {
      "enabled": true,
      "autoCreateUser": true,
      "usernamePrefix": "nostr_",
      "usernameLength": 8
    },
    "github": {
      "enabled": true,
      "autoCreateUser": true,
      "usernamePrefix": "gh_",
      "allowedUsers": []
    }
  },
  "session": {
    "strategy": "jwt",
    "maxAge": 2592000,
    "updateAge": 86400
  },
  "security": {
    "requireEmailVerification": false,
    "allowSignup": true,
    "redirectAfterSignin": "/",
    "cookieSecure": true
  },
  "pages": {
    "signin": "/auth/signin",
    "verifyRequest": "/auth/verify-request",
    "error": "/auth/error",
    "signout": "/auth/signout"
  },
  "features": {
    "showEmailProvider": true,
    "showNostrProvider": true,
    "showGithubProvider": true,
    "enableGuestMode": false,
    "requireTermsAcceptance": false
  },
  "copy": {
    "signin": {
      "title": "Sign in to your account",
      "description": "Choose your preferred authentication method",
      "emailCard": {
        "title": "Email Magic Link",
        "description": "We'll send you a secure link to sign in",
        "placeholder": "Enter your email address",
        "button": "Send Magic Link",
        "loadingButton": "Sending..."
      },
      "nostrCard": {
        "title": "Nostr Extension (NIP07)",
        "description": "Sign in with your Nostr browser extension",
        "button": "Sign in with Nostr",
        "loadingButton": "Connecting...",
        "helpText": "Requires a NIP07-compatible browser extension like Alby, nos2x, or Flamingo"
      },
      "githubCard": {
        "title": "GitHub Account",
        "description": "Sign in with your GitHub account",
        "button": "Sign in with GitHub",
        "loadingButton": "Connecting..."
      },
      "dividerText": "Or",
      "termsText": "By signing in, you agree to our terms of service and privacy policy.",
      "messages": {
        "emailSent": "Check your email! We've sent a magic link to {email}",
        "emailError": "Failed to send magic link. Please try again.",
        "nostrExtensionMissing": "Nostr browser extension not found. Please install a NIP07-compatible extension like Alby, nos2x, or Flamingo.",
        "nostrError": "Nostr authentication failed. Please try again.",
        "githubError": "GitHub authentication failed. Please try again.",
        "genericError": "Something went wrong. Please try again."
      }
    },
    "verifyRequest": {
      "title": "Check your email",
      "description": "We've sent you a magic link to sign in",
      "cardTitle": "Email Sent!",
      "cardDescription": "We sent a magic link to {email}",
      "cardDescriptionNoEmail": "We sent you a magic link",
      "steps": {
        "title": "Next steps:",
        "step1": "Check your email inbox (and spam folder)",
        "step2": "Click the magic link in the email",
        "step3": "You'll be automatically signed in"
      },
      "expiry": "The magic link will expire in 24 hours.",
      "noEmail": "Didn't receive the email?",
      "tryAgain": "Try again",
      "returnHome": "Return to Home"
    },
    "error": {
      "title": "Oops! Something went wrong",
      "description": "We encountered an issue with your authentication",
      "persistentError": "If this problem persists, please contact support with the error code above.",
      "returnHome": "Return to Home",
      "needHelp": "Need help?",
      "contactSupport": "Contact Support",
      "errorMessages": {
        "CredentialsSignin": {
          "title": "Authentication Failed",
          "description": "The credentials you provided are invalid. Please check your information and try again.",
          "action": "Try signing in again"
        },
        "EmailSignin": {
          "title": "Email Signin Error",
          "description": "There was an error sending your magic link. Please try again.",
          "action": "Request new magic link"
        },
        "SessionRequired": {
          "title": "Session Required",
          "description": "You need to be signed in to access this page.",
          "action": "Sign in"
        },
        "Default": {
          "title": "Authentication Error",
          "description": "An unexpected error occurred during authentication. Please try again.",
          "action": "Try again"
        }
      }
    }
  },
  "_comments": {
    "providers": "Authentication provider configuration - controls which authentication methods are available",
    "providers.email.enabled": "Enable/disable email magic link authentication. When false, email option is completely removed from auth flow.",
    "providers.email.maxAge": "Email verification link expiry in seconds. Default 86400 = 24 hours. Links expire after this time.",
    "providers.email.rateLimit.requests": "Maximum number of email magic link requests allowed per time window per IP/user",
    "providers.email.rateLimit.window": "Rate limiting time window in seconds. Default 900 = 15 minutes. Prevents spam requests.",
    "providers.nostr.enabled": "Enable/disable NIP07 Nostr browser extension authentication. Requires user to have compatible extension.",
    "providers.nostr.autoCreateUser": "Auto-create user account on first successful Nostr login. If false, accounts must exist first.",
    "providers.nostr.usernamePrefix": "Text prefix for auto-generated usernames from Nostr pubkey. Example: 'nostr_' creates 'nostr_a1b2c3d4'",
    "providers.nostr.usernameLength": "Number of characters from pubkey to use in auto-generated username. Recommended: 6-12 characters.",
    "providers.github.enabled": "Enable/disable GitHub OAuth authentication. Requires GITHUB_CLIENT_ID and GITHUB_CLIENT_SECRET environment variables.",
    "providers.github.autoCreateUser": "Auto-create user account on first successful GitHub login. If false, accounts must exist first.",
    "providers.github.usernamePrefix": "Text prefix for auto-generated usernames from GitHub login. Example: 'gh_' creates 'gh_username'",
    "providers.github.allowedUsers": "Array of GitHub usernames allowed to sign in. Empty array allows all users. Use for access control.",
    "session": "Session management configuration - controls how user sessions are stored and managed",
    "session.strategy": "Session storage method: 'jwt' (stateless tokens) or 'database' (server-side storage). JWT is faster, database more secure.",
    "session.maxAge": "Maximum session duration in seconds before forced re-authentication. Default 2592000 = 30 days.",
    "session.updateAge": "How often session is refreshed in seconds. Default 86400 = 1 day. Extends session on activity.",
    "security": "Security and access control settings",
    "security.requireEmailVerification": "Force email verification before account activation. Users must click email link before access.",
    "security.allowSignup": "Allow new user registration. If false, only existing users can sign in. Useful for private instances.",
    "security.redirectAfterSignin": "Default URL to redirect users after successful authentication. Usually '/' for homepage.",
    "security.cookieSecure": "Use secure HTTPS-only cookies. Should be true in production for security.",
    "pages": "Custom authentication page URLs - allows customizing where auth flows redirect",
    "pages.signin": "Sign-in page URL. Users are redirected here when authentication is required.",
    "pages.verifyRequest": "Email verification page URL. Shown after user requests magic link.",
    "pages.error": "Authentication error page URL. Shown when auth fails with error details.",
    "pages.signout": "Sign-out confirmation page URL. Optional custom page after logout.",
    "features": "UI feature toggles - controls what authentication options are visible to users",
    "features.showEmailProvider": "Show email authentication option in sign-in UI. Hides email form if false.",
    "features.showNostrProvider": "Show Nostr authentication option in sign-in UI. Hides Nostr button if false.",
    "features.showGithubProvider": "Show GitHub authentication option in sign-in UI. Hides GitHub button if false.",
    "features.enableGuestMode": "Allow guest/anonymous access to content without authentication. Useful for public content.",
    "features.requireTermsAcceptance": "Show terms of service acceptance text on sign-in page. Required for legal compliance.",
    "copy": "All user-facing text for authentication pages - fully customizable for branding and localization",
    "copy.signin": "Sign-in page text configuration including titles, descriptions, buttons, and error messages",
    "copy.signin.emailCard": "Email authentication section text including form labels and button text",
    "copy.signin.nostrCard": "Nostr authentication section text including button text and help information",
    "copy.signin.messages": "Dynamic messages shown based on user actions (success, errors). Supports {email} placeholder.",
    "copy.verifyRequest": "Email verification page text shown after user requests magic link",
    "copy.verifyRequest.steps": "Step-by-step instructions shown to users for completing email verification",
    "copy.error": "Error page text configuration including error messages for different failure types",
    "copy.error.errorMessages": "Specific error messages mapped to NextAuth error codes (CredentialsSignin, EmailSignin, etc.)"
  },
  "_examples": {
    "nostrOnly": {
      "providers": {
        "email": { "enabled": false },
        "nostr": { "enabled": true }
      },
      "features": {
        "showEmailProvider": false,
        "showNostrProvider": true
      }
    },
    "emailOnly": {
      "providers": {
        "email": { "enabled": true },
        "nostr": { "enabled": false }
      },
      "features": {
        "showEmailProvider": true,
        "showNostrProvider": false
      }
    },
    "strictSecurity": {
      "security": {
        "requireEmailVerification": true,
        "allowSignup": false
      },
      "providers": {
        "email": {
          "rateLimit": {
            "requests": 3,
            "window": 1800
          }
        }
      }
    },
    "guestAccess": {
      "features": {
        "enableGuestMode": true,
        "requireTermsAcceptance": true
      }
    },
    "githubOnly": {
      "providers": {
        "email": { "enabled": false },
        "nostr": { "enabled": false },
        "github": { "enabled": true }
      },
      "features": {
        "showEmailProvider": false,
        "showNostrProvider": false,
        "showGithubProvider": true
      }
    },
    "restrictedGithub": {
      "providers": {
        "github": {
          "enabled": true,
          "allowedUsers": ["username1", "username2"]
        }
      }
    }
  }
}